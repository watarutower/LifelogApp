resyclerview からdiff callback を抜こうとした
data binding をしていないと binding Adapterも使えないので断念


package com.example.lifelogapp.ui.historyindex

import android.annotation.SuppressLint
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.recyclerview.widget.DiffUtil
import androidx.recyclerview.widget.ListAdapter
import androidx.recyclerview.widget.RecyclerView
import com.example.lifelogapp.R
import com.example.lifelogapp.database.Lifelog
import com.example.lifelogapp.databinding.ListIndexDaysBinding
import com.example.lifelogapp.databinding.ListItemDayStatusBinding
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext


class HistoryIndexAdapter(val clickListener: HistoryIndexListener):
        RecyclerView.Adapter<HistoryIndexAdapter.ViewHolder>() {

    var data =  listOf<String>()
        set(value) {
            field = value
            notifyDataSetChanged()
        }
    override fun getItemCount() = data.size

//    --------------------------
    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
    val item = data[position]
    holder.bind(item)
    }

 //    --------------------------
 override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
     return ViewHolder.from(parent)
 }


//    --------------------------
    class ViewHolder private constructor(val binding: ListIndexDaysBinding)
        : RecyclerView.ViewHolder(binding.root){
    val dayIndex: TextView = itemView.findViewById(R.id.day_index)

        fun bind(item: String, clickListener: HistoryIndexListener) {
            val res = itemView.context.resources
            dayIndex.text = item
            binding.clickListener = clickListener
            binding.executePendingBindings()
        }

        companion object {
            fun from(parent: ViewGroup): ViewHolder {
                val layoutInflater = LayoutInflater.from(parent.context)
                val view = layoutInflater
                        .inflate(R.layout.list_index_days, parent, false)
                return ViewHolder(view)
            }
        }
    }

}
//    -----------------------
//class HistoryIndexDiffCallback : DiffUtil.ItemCallback<Lifelog>() {
//    override fun areItemsTheSame(oldItem: Lifelog, newItem: Lifelog): Boolean {
//        return oldItem.statusId == newItem.statusId
//    }
//    @SuppressLint("DiffUtilEquals")
//    override fun areContentsTheSame(oldItem: Lifelog, newItem: Lifelog): Boolean {
//        return oldItem == newItem
//    }
//}

//    --------------------------
class HistoryIndexListener(val clickListener: (statusId: Long) -> Unit) {
    fun onClick(oneStatus: Lifelog) = clickListener(oneStatus.statusId)
}